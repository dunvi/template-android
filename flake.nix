{
  inputs = {
    nixpkgs.url = "github:nixos/nixpkgs/nixos-unstable";
    flake-parts.url = "github:hercules-ci/flake-parts";
  };

  outputs = inputs@{ self, nixpkgs, flake-parts, ... }:
    flake-parts.lib.mkFlake { inherit inputs; } {

      systems = [
        "x86_64-linux"
      ];

      perSystem = { config, system, pkgs, ... }:
      let
        lib = pkgs.lib // builtins;

        pkgs = import nixpkgs {
          inherit system;
          config = {
            allowUnfree = true;
            android_sdk.accept_license = true;
          };
        };

        ndkVersion = "27.3.13750724";

        androidBundle = pkgs.androidenv.composeAndroidPackages {
          platformVersions = [ "36" ];
          ndkVersions = [ ndkVersion ];
          includeEmulator = true;
          includeSystemImages = true;
          includeSources = true;
          includeNDK = true;
        };

        sdkRoot = androidBundle.androidsdk + "/libexec/android-sdk";
        ndkRoot = sdkRoot + "/ndk/${ndkVersion}";

        mkStudio = with pkgs; opts: callPackage (import ./android-studio.nix opts) {
          fontsConf = makeFontsConf {
            fontDirectories = [ ];
          };
          inherit buildFHSEnv;
        };
        androidStudio = mkStudio {
          #version = "2025.1.3.7"; # "Android Studio Narwhal 3 Feature Drop | 2025.1.3"
          #sha256Hash = "sha256-pet3uTmL4pQ/FxB2qKv+IZNx540gMC7hmfOaQ8iLQpQ=";
          #channel = "stable";
          #pname = "android-studio";
          inherit ndkVersion;
          androidSdk = androidBundle.androidsdk;
        };
      in
      {
        devShells.default = pkgs.mkShell {
          name = "template-android";

          imports = [] ++
            lib.optional(builtins.pathExists ./devenv.local.nix)
              ./devenv.local.nix;

          passthru = {
            #inherit androidStudio;
          };

          buildInputs = [
            androidStudio.full
            androidBundle.androidsdk
            androidBundle.platform-tools
            pkgs.jdk
          ];

          ANDROID_HOME="${sdkRoot}";
          ANDROID_SDK_ROOT="${sdkRoot}";
          ANDROID_NDK_ROOT="${ndkRoot}";
          JAVA_HOME="${pkgs.jdk}";

          shellHook = ''
            echo "welcome to android world, still in progress"

            echo "ANDROID_HOME=$ANDROID_HOME"
            echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
            echo "ANDROID_NDK_ROOT=$ANDROID_NDK_ROOT"

            export GRADLE_OPTS="-Dorg.gradle.project.android.aapt2FromMavenOverride=$(echo "$ANDROID_SDK_ROOT/build-tools/"*"/aapt2")"

            # Add cmake to the path.
            cmake_root="$(echo "$ANDROID_SDK_ROOT/cmake/"*/)"
            export PATH="$cmake_root/bin:$PATH"

            # Write out local.properties for Android Studio.
            cat <<EOF > local.properties
            # This file was automatically generated by nix-shell.
            sdk.dir=$ANDROID_SDK_ROOT
            ndk.dir=$ANDROID_NDK_ROOT
            cmake.dir=$cmake_root
            EOF

            adb devices
          '';
        };
      };
    };
}
